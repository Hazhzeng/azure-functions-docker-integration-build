name: $(Date:yyyyMMdd)$(Rev:r)

trigger:
- master
- dev

variables:
  TestUsername: testuser
  TestSubscription: testsubscription
  TestWebSpace: testwebspace

jobs:
- job: "CleanupStampAndSetupKuduLite"
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
  - template: pipeline_tasks/cleanup_task.yml
    parameters:
      proxyAntaresCmdAddress: $(ProxyAntaresCmdAddress)
      proxyUsername: $(ProxyUsername)
      proxyPassword: $(ProxyPassword)
      testSubscription: $(TestSubscription)
      testWebSpace: $(TestWebSpace)
      skipImageUpdate: $(SkipImageUpdate)

- job: "BuildAndUpdateV2Python36Image"
  dependsOn: "CleanupStampAndSetupKuduLite"
  pool:
      vmImage: 'ubuntu-18.04'
  steps:
  - template: pipeline_tasks/build_v2_python_task.yml
    parameters:
      artifactPythonVersion: 'python36'
      artifactImageName: 'mesh'
      placeholderId: 'v=1,k=f,e=~2,a=0'
      minContainers: '5'
      maxContainesr: '8'
      proxyAntaresCmdAddress: $(ProxyAntaresCmdAddress)
      proxyUsername: $(ProxyUsername)
      proxyPassword: $(ProxyPassword)
      skipImageUpdate: $(SkipImageUpdate)

- job: "BuildAndUpdateV2Python37Image"
  dependsOn: "CleanupStampAndSetupKuduLite"
  pool:
      vmImage: 'ubuntu-18.04'
  steps:
  - template: pipeline_tasks/build_v2_python_task.yml
    parameters:
      artifactPythonVersion: 'python37'
      artifactImageName: 'mesh-py37'
      placeholderId: 'v=1,k=f,e=~2,a=0,r=python,rv=3.7'
      minContainers: '3'
      maxContainesr: '5'
      proxyAntaresCmdAddress: $(ProxyAntaresCmdAddress)
      proxyUsername: $(ProxyUsername)
      proxyPassword: $(ProxyPassword)
      skipImageUpdate: $(SkipImageUpdate)

- job: "SetupStampAndDeployTestApps"
  dependsOn: ['BuildAndUpdateV2Python36Image',
              'BuildAndUpdateV2Python37Image']
  pool:
      vmImage: 'ubuntu-18.04'
  steps:
  - template: pipeline_tasks/setup_task.yml
    parameters:
      waitMinutes: '10'
      proxyAntaresCmdAddress: $(ProxyAntaresCmdAddress)
      proxyUsername: $(ProxyUsername)
      proxyPassword: $(ProxyPassword)
      testUsername: $(TestUsername)
      publishingPassword: $(PublishingPassword)
      azureWebJobsStorage: $(AzureWebJobsStorage)
      testSubscription: $(TestSubscription)
      testWebSpace: $(TestWebSpace)
      skipImageUpdate: $(SkipImageUpdate)

- job: "RunTests"
  dependsOn: ['SetupStampAndDeployTestApps']
  pool:
      vmImage: 'ubuntu-18.04'
  steps:
  - template: pipeline_tasks/run_test_task.yml
    parameters:
      stampAddress: $(StampAddress)
      testCasesRepository: 'https://github.com/maiqbal11/azure-functions-devops-cli-test.git'
